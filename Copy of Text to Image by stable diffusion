{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1FqfuWqRcElxOc0LfMLo1V9fpKW6QQk9e","timestamp":1756125836034}],"authorship_tag":"ABX9TyOdpqlOOOvTmOpIe6PwFtLp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"BN7_h_s660Mc","executionInfo":{"status":"ok","timestamp":1756124298122,"user_tz":-330,"elapsed":25007,"user":{"displayName":"Aditya Panwar","userId":"08007872216704762094"}},"outputId":"34fc2e88-a930-4856-d2a3-bb14d097de79","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m42.0/42.0 kB\u001b[0m \u001b[31m1.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.1/4.1 MB\u001b[0m \u001b[31m47.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m11.3/11.3 MB\u001b[0m \u001b[31m134.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["!pip install --upgrade diffusers transformers -q"]},{"cell_type":"code","source":["from pathlib import Path\n","import tqdm\n","import torch\n","import pandas as pd\n","import numpy as np\n","from diffusers import StableDiffusionPipeline\n","from transformers import pipeline, set_seed\n","import matplotlib.pyplot as plt\n","import cv2"],"metadata":{"id":"5dNzPGPLjy73","executionInfo":{"status":"ok","timestamp":1756124534002,"user_tz":-330,"elapsed":18103,"user":{"displayName":"Aditya Panwar","userId":"08007872216704762094"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["class CFG:\n","  device = \"cuda\"\n","  seed = 42\n","  generator = torch.Generator(device).manual_seed(seed)\n","  image_gen_steps =  35\n","  image_gen_model_id = \"stablilityai/stable-diffusion-2-1\"\n","  prompt_gen_model_id = \"gpt2\"\n","  prompt_gen_guidance_scale = 9\n","  prompot_dataset_size = 6\n","  prompt_max_length = 12\n","  image_gen_size = (512,512)\n",""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":384},"id":"HhWiAtmeLaa7","executionInfo":{"status":"error","timestamp":1756125007142,"user_tz":-330,"elapsed":50,"user":{"displayName":"Aditya Panwar","userId":"08007872216704762094"}},"outputId":"e560231f-c6f2-4bc7-ca1e-ec789ffcd0f9"},"execution_count":4,"outputs":[{"output_type":"error","ename":"AcceleratorError","evalue":"CUDA error: CUDA driver version is insufficient for CUDA runtime version\nCUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1\nDevice-side assertions were explicitly omitted for this error check; the error probably arose while initializing the DSA handlers.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAcceleratorError\u001b[0m                          Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-3046428695.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mclass\u001b[0m \u001b[0mCFG\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m   \u001b[0mdevice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"cuda\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m   \u001b[0mseed\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m42\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0mgenerator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGenerator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmanual_seed\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mseed\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0mimage_gen_steps\u001b[0m \u001b[0;34m=\u001b[0m  \u001b[0;36m35\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tmp/ipython-input-3046428695.py\u001b[0m in \u001b[0;36mCFG\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m   \u001b[0mdevice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"cuda\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m   \u001b[0mseed\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m42\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m   \u001b[0mgenerator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGenerator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmanual_seed\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mseed\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m   \u001b[0mimage_gen_steps\u001b[0m \u001b[0;34m=\u001b[0m  \u001b[0;36m35\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0mimage_gen_model_id\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"stablilityai/stable-diffusion-2-1\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAcceleratorError\u001b[0m: CUDA error: CUDA driver version is insufficient for CUDA runtime version\nCUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1\nDevice-side assertions were explicitly omitted for this error check; the error probably arose while initializing the DSA handlers."]}]},{"cell_type":"code","source":["image_gen_model = StableDiffusionPipeline.from_pretrained(\n","    CFG.image_gen_model_id, torch_dtype=torch.float16, revision=\"fp16\",\n","    use_auth_token=\"\", guidance_scale = 9\n",")\n","image_gen_model = image_gen_model.to(CFG.device)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"rJjQk9euN7oQ","executionInfo":{"status":"error","timestamp":1756125782295,"user_tz":-330,"elapsed":15,"user":{"displayName":"Aditya Panwar","userId":"08007872216704762094"}},"outputId":"164f778c-83e4-4932-dd0a-96dd525fc8a6"},"execution_count":10,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'CFG' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-3774893782.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m image_gen_model = StableDiffusionPipeline.from_pretrained(\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mCFG\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimage_gen_model_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtorch_dtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat16\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrevision\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"fp16\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m     \u001b[0muse_auth_token\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mguidance_scale\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m9\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m )\n\u001b[1;32m      5\u001b[0m \u001b[0mimage_gen_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimage_gen_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCFG\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'CFG' is not defined"]}]},{"cell_type":"code","source":["def generate_image(prompt, model):\n","  image = model(\n","      prompt, num_inference_steps=CGF.image_gen_steps,\n","      generator=CGF.generator,\n","      guidance_scale=CGF.img_gen_guidance_scale\n","  ).images[0]\n","\n","  image = image.resize(CGF.image_gen_size)\n","  return image"],"metadata":{"id":"6dllzqy-PRJd","executionInfo":{"status":"ok","timestamp":1756125698204,"user_tz":-330,"elapsed":13,"user":{"displayName":"Aditya Panwar","userId":"08007872216704762094"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["generate_image(\"An astronaut in space\", image_gen_model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"EgyDUQEHP47p","executionInfo":{"status":"error","timestamp":1756125776128,"user_tz":-330,"elapsed":86,"user":{"displayName":"Aditya Panwar","userId":"08007872216704762094"}},"outputId":"0cd56983-3a96-47b4-f1d4-7829d159ff4a"},"execution_count":9,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'image_gen_model' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-1225140800.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgenerate_image\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"An astronaut in space\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimage_gen_model\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'image_gen_model' is not defined"]}]}]}